#pragma checksum "C:\Users\Administrator\Desktop\Projects\MilenkoRaic\Source\CleanArch.Client.MVC\Views\AboutWork\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "71cab0319958d00ec5d7a58a0a47e5065dc0609e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(CleanArch.Client.MVC.Views.AboutWork.Views_AboutWork_Index), @"mvc.1.0.view", @"/Views/AboutWork/Index.cshtml")]
namespace CleanArch.Client.MVC.Views.AboutWork
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Administrator\Desktop\Projects\MilenkoRaic\Source\CleanArch.Client.MVC\Views\_ViewImports.cshtml"
using CleanArch.Client.MVC;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"71cab0319958d00ec5d7a58a0a47e5065dc0609e", @"/Views/AboutWork/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0d2b223c3a68f0f67c8b1d4218a107e70beb9ecf", @"/Views/_ViewImports.cshtml")]
    public class Views_AboutWork_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<!-- ======= About Work Section ======= -->
<section id=""portfolio-page-about"" class=""portfolio-page-about portfolio-page-distant"">
    <div class=""container"">
        <div class=""portfolio-page-about-content"" data-aos=""zoom-in"">
            <p>
                I have successfully worked in over 10 different industries so far, which gives me some insight into what kind of problem people are facing there today.
                I am choosing this approach because I don’t want to follow some default imposed pattern where you have to do what others tell you to do.
                As an individual I am nothing special, the only thing that sets me apart is that I try to make an impact. How strong the impact will be depends solely on whether I am surrounded by an idiots or open-minded people who are willing to do something unusual.
                <br />
                <br />
                It is necessary to combine different factors that will work together to accomplish any of our visions.
           ");
            WriteLiteral(@"     The centralization of any system depends solely on human engagement. Digitalization cannot be painless, and those who promise people that type of transition are mere liars hiding behind good PR.
                There is only one (less painful) direction for transformation and that is workplace engineering. To solve the problem we need to define it first.
                Wherever I worked I was focused on what was going on around me. In this way, I developed the skill of quick adaptation to any environment.
                <br />
                <br />    
            </p>
            <ul style=""margin-left:20px;"">
                <li>I was planning to travel the world for free,  so I was a sailor.</li>
                <li>I was planning to learn something important, so I was a salesperson.</li>
                <li>I was planning to learn something kind, so I was a waiter.</li>
                <li>I was planning to learn something difficult, so I was a stonemason.</li>
                <li>I was");
            WriteLiteral(@" planning to solve problems, so I was software support.</li>
                <li>I was planning to make problems, so I was a programmer.</li>
                <li>I was planning to learn something complicated, so I was a carpenter.</li>
            </ul>
            <p>
                All of the things I’ve listed above prove that we can all become whatever we want, but that doesn’t mean we can be good at it.
                The question is whether it is necessary to be good at everything.
                I don’t think that’s the case because it’s obvious that anyone with a little persistence can do what I do, and that’s nothing but pushing boundaries.
                Pushing boundaries is nothing more than taking your ass out of your comfort zone and putting it on fire. Many people have been in that fire all their lives. 
                What makes them different is that they have changed the world upside down. From the world of idiots with axes, we have evolved into a world of people looking for ge");
            WriteLiteral(@"neral artificial intelligence (and idiots with axes). 
                No matter how much we progress, things won't change that much, but that's not a reason not to start.
            </p>
            <h6>WHAT I DO IS JUST FORCING PEOPLE TO WEAR TO MOVE ""FULL AHEAD"", ALTHOUGH I KNOW THAT THEY WILL HATE AT THE BEGINNING.</h6>
        </div>
    </div>
</section>
<!-- End About Work Section -->");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
